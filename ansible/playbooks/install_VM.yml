---
- name: Mettre à niveau les VMs et configurer SSH/Docker
  hosts: all

  vars:
    # Variables pour la configuration SSH
    sshd_harden_lines: |
      PermitRootLogin prohibit-password
      PasswordAuthentication no
      UsePAM no
    sshd_relax_lines: |
      PermitRootLogin yes
      PasswordAuthentication yes
      UsePAM yes

    # Variables pour les alias
    common_aliases: |
      alias ll='ls $LS_OPTIONS -l'
      alias l='ls $LS_OPTIONS -lA'
      alias harden_ssh='sudo cp /etc/ssh/sshd_config.harden /etc/ssh/sshd_config && systemctl reload ssh'
      alias relax_ssh='sudo cp /etc/ssh/sshd_config.relax /etc/ssh/sshd_config && systemctl reload ssh'

  tasks:
    - name: Vérifier si Docker est installé (Debian/RedHat)
      command: docker --version
      register: docker_check
      ignore_errors: yes

    - name: Afficher le résultat
      debug:
        msg: "Docker est installé"
      when: docker_check.rc == 0

    - name: Mettre à jour le cache APT
      become: yes # Exécuter toutes les tâches avec les privilèges root (sudo)
      ansible.builtin.apt:
        update_cache: yes
      tags:
        - apt_update

    - name: Mettre à niveau tous les paquets installés
      become: yes # Exécuter toutes les tâches avec les privilèges root (sudo)
      ansible.builtin.apt:
        upgrade: yes
      tags:
        - apt_upgrade

    - name: Créer /etc/ssh/sshd_config.harden si inexistant (copie de l'original)
      ansible.builtin.copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.harden
        remote_src: yes # La source est sur la machine distante
        force: no # Ne copie pas si le fichier de destination existe déjà
        mode: '0644'
      tags:
        - ssh_config

    - name: Créer /etc/ssh/sshd_config.relax si inexistant (copie de l'original)
      ansible.builtin.copy:
        src: /etc/ssh/sshd_config
        dest: /etc/ssh/sshd_config.relax
        remote_src: yes
        force: no
        mode: '0644'
      tags:
        - ssh_config

    - name: Configurer /etc/ssh/sshd_config.harden avec les lignes spécifiées
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config.harden
        block: "{{ sshd_harden_lines }}"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK - sshd_config.harden"
        mode: '0644'
      tags:
        - ssh_config

    - name: Configurer /etc/ssh/sshd_config.relax avec les lignes spécifiées
      ansible.builtin.blockinfile:
        path: /etc/ssh/sshd_config.relax
        block: "{{ sshd_relax_lines }}"
        create: yes
        marker: "# {mark} ANSIBLE MANAGED BLOCK - sshd_config.relax"
        mode: '0644'
      tags:
        - ssh_config

    - name: S'assurer que le répertoire personnel de l'utilisateur existe
      ansible.builtin.file:
        path: "/home/{{ ansible_user_id }}" # Utilisez ansible_user_id pour l'utilisateur distant
        state: directory
        mode: '0755'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      tags:
        - aliases

    - name: Créer le fichier alias.bsh s'il n'existe pas
      ansible.builtin.file:
        path: "/home/{{ ansible_user_id }}/alias.bsh"
        state: file
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      tags:
        - aliases

    - name: Ajouter les alias dans alias.bsh
      ansible.builtin.blockinfile:
        path: "/home/{{ ansible_user_id }}/alias.bsh"
        block: "{{ common_aliases }}"
        marker: "# {mark} ANSIBLE MANAGED ALIASES"
        mode: '0644'
      tags:
        - aliases

    - name: Créer le fichier scripts.bsh s'il n'existe pas
      ansible.builtin.file:
        path: "/home/{{ ansible_user_id }}/scripts.bsh"
        state: file
        mode: '0644'
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      tags:
        - scripts

    - name: Ajouter la source de scripts.bsh dans .bashrc si elle n'existe pas
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user_id }}/.bashrc"
        line: ". ~/scripts.bsh"
        create: yes
        insertbefore: EOF
        regexp: '^\. ~\/scripts\.bsh$' # Empêche d'ajouter la ligne en double
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      tags:
        - bashrc

    - name: Ajouter la source de alias.bsh dans .bashrc si elle n'existe pas
      ansible.builtin.lineinfile:
        path: "/home/{{ ansible_user_id }}/.bashrc"
        line: ". ~/alias.bsh"
        create: yes
        insertbefore: EOF
        regexp: '^\. ~\/alias\.bsh$' # Empêche d'ajouter la ligne en double
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_id }}"
      tags:
        - bashrc

    - name: Installer Docker si non détecté
      become: yes
      when: docker_check.rc != 0 # Exécute toutes les tâches Docker seulement si Docker n'est pas installé
      block:
        - name: Installer les prérequis pour Docker
          ansible.builtin.apt:
            name:
              - ca-certificates
              - curl
            state: present

        - name: Créer le répertoire /etc/apt/keyrings
          ansible.builtin.file:
            path: /etc/apt/keyrings
            state: directory
            mode: '0755'

        - name: Télécharger la clé GPG officielle de Docker
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.asc
            mode: '0644' # Équivalent à a+r

        - name: Ajouter le dépôt Docker aux sources APT
          ansible.builtin.apt_repository:
            repo: "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            filename: docker # Nom du fichier dans /etc/apt/sources.list.d/
            update_cache: yes # Mettre à jour le cache APT après l'ajout du dépôt

        - name: Ajouter le dépôt Docker aux sources APT
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            filename: docker # Nom du fichier dans /etc/apt/sources.list.d/
            update_cache: yes # Mettre à jour le cache APT après l'ajout du dépôt

        - name: Installer les paquets Docker
          ansible.builtin.apt:
            name:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-buildx-plugin
              - docker-compose-plugin
            state: present

        - name: S'assurer que le groupe 'docker' existe
          ansible.builtin.group:
            name: docker
            state: present

        - name: Ajouter l'utilisateur courant au groupe 'docker'
          ansible.builtin.user:
            name: "{{ ansible_user_id }}"
            groups: docker
            append: yes
          notify: Redémarrer la session utilisateur (Docker)

      tags:
        - docker

    - name: Créer les répertoires /media/backup et /media/common
      become: yes
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      loop:
        - /media/backup
        - /media/common
      tags:
        - directories

    - name: Créer le répertoire /media/<VM_NAME>
       become: yes
      ansible.builtin.file:
        path: "/media/{{ node_name }}"
        state: directory
        mode: '0755'
        owner: root
        group: root
      tags:
        - directories

  handlers:
    - name: Redémarrer la session utilisateur (Docker)
      ansible.builtin.debug:
        msg: "L'utilisateur '{{ ansible_user_id }}' a été ajouté au groupe 'docker'. Veuillez vous déconnecter et vous reconnecter pour que les changements prennent effet."
      # Ceci est une notification, pas une action système.
      # Un simple debug message est suffisant car Ansible ne peut pas forcer une déconnexion/reconnexion.